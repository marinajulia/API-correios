// <auto-generated />
using Carga_no_banco_de_dados_correiros.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carga_no_banco_de_dados_correiros.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Carga_no_banco_de_dados_correiros.Domain.Services.Entidades.LogBairro", b =>
                {
                    b.Property<int>("BAI_NU")
                        .HasColumnType("int");

                    b.Property<string>("BAI_NO")
                        .HasColumnType("varchar(72)");

                    b.Property<string>("BAI_NO_ABREV")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("LogLocalidadeId")
                        .HasColumnType("int");

                    b.Property<string>("UFE_SG")
                        .HasColumnType("char(2)");

                    b.HasKey("BAI_NU");

                    b.HasIndex("LogLocalidadeId");

                    b.ToTable("LogBairro");
                });

            modelBuilder.Entity("Carga_no_banco_de_dados_correiros.Domain.Services.Entidades.LogLocalidade", b =>
                {
                    b.Property<int>("LOC_NU")
                        .HasColumnType("int");

                    b.Property<string>("CEP")
                        .HasColumnType("char(8)");

                    b.Property<string>("LOC_IN_SIT")
                        .HasColumnType("char(1)");

                    b.Property<string>("LOC_IN_TIPO_LOC")
                        .HasColumnType("char(1)");

                    b.Property<string>("LOC_NO")
                        .HasColumnType("varchar(72)");

                    b.Property<string>("LOC_NO_ABREV")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("LOC_NU_SUB")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("MUN_NU")
                        .HasColumnType("char(7)");

                    b.Property<string>("UFE_SG")
                        .HasColumnType("char(2)");

                    b.HasKey("LOC_NU");

                    b.ToTable("LogLocalidade");
                });

            modelBuilder.Entity("Carga_no_banco_de_dados_correiros.Domain.Services.Entidades.LogBairro", b =>
                {
                    b.HasOne("Carga_no_banco_de_dados_correiros.Domain.Services.Entidades.LogLocalidade", "LogLocalidade")
                        .WithMany()
                        .HasForeignKey("LogLocalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogLocalidade");
                });
#pragma warning restore 612, 618
        }
    }
}
